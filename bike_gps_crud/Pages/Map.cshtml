@page
@model bike_gps_crud.Pages.MapModel

@{
    ViewData["Title"] = "GPX Track Map";
}

<h1>GPX Track Map</h1>

<div id="map" style="height: 600px; width: 100%;"></div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/togeojson@0.16.0/togeojson.js"></script>

    <script>
        mapboxgl.accessToken = '@Model.MapboxAccessToken';
        
        const map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v12',
            center: [-111.0392, 45.6760],
            zoom: 9
        });

        function loadGPXData(gpxData, color) {
            const geojson = toGeoJSON.gpx(gpxData);
            
            map.on('load', () => {
                map.addSource('gpx-track', {
                    type: 'geojson',
                    data: geojson
                });

                map.addLayer({
                    id: 'gpx-track',
                    type: 'line',
                    source: 'gpx-track',
                    paint: {
                        'line-color': color,
                        'line-width': 3
                    }
                });
            });
        }

        @foreach (var trail in Model.Trails)
        {
            <text>
                const trailName = '@trail.Name';
                const gpxTrack = '@trail.GpxTrack';
                const difficulty = '@trail.Difficulty';
        
        
                function getColorByDifficulty(difficulty) {
                    switch (difficulty) {
                        case 'Green':
                            return '#00FF00'; // Green
                        case 'Blue':
                            return '#0040ff'; // Blue
                        case 'Black':
                            return '#000000'; // Black
                        case 'Red':
                            return '#FF0000';
                        case 'Purple':
                            return '#FF00FF';
                        default:
                            return '#FFFFFF'; // Default color (White)
                    }
                }

                const color = getColorByDifficulty(difficulty);

                fetch(gpxTrack)
                    .then(response => response.text())
                    .then(gpxData => {
                        const parser = new DOMParser();
                        const xmlDoc = parser.parseFromString(gpxData, "application/xml");

                        loadGPXData(xmlDoc, color);
                    })
                    .catch(error => console.error('Error loading GPX file for ' + trailName + ':', error));
            </text>
        }

    </script>
}
